<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>2pc on Li. Mingzhi</title>
    <link>/tags/2pc/</link>
    <description>Recent content in 2pc on Li. Mingzhi</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 05 Mar 2021 19:00:52 +0800</lastBuildDate><atom:link href="/tags/2pc/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>分布式: 2PC理论</title>
      <link>/p/%E5%88%86%E5%B8%83%E5%BC%8F-2pc%E7%90%86%E8%AE%BA/</link>
      <pubDate>Fri, 05 Mar 2021 19:00:52 +0800</pubDate>
      
      <guid>/p/%E5%88%86%E5%B8%83%E5%BC%8F-2pc%E7%90%86%E8%AE%BA/</guid>
      <description>[TOC]
Statement  This article is my study notes about distributed systems. Please refer to the original work for more details and indicate the source for reprinting.  1. 背景 在分布式系统中发起一个事务，该事务涉及多个不同节点，那么为了保证事务 ACID 特性，就需要引入一个协调者来统一调度事务涉及的多个节点，被调度的节点称为事务参与者。由此衍生出 2PC 和 3PC 协议。
2. 2PC(两阶段提交，Two-Phase Commit) 分为两个阶段：Prepare 和 Commit
2.1 Prepare：提交事务请求   询问
协调者向所有参与者发送事务请求，询问是否可执行事务操作，然后等待各个参与者的响应。
  执行
各个参与者接收到协调者事务请求后，执行事务操作(例如更新一个关系型数据库表中的记录)，并将 Undo 和 Redo 信息记录事务日志中。
  响应
如果参与者成功执行了事务并写入 Undo 和 Redo 信息，则向协调者返回 YES 响应，否则返回 NO 响应。当然，参与者也可能宕机，从而不会返回响应。
  2.</description>
    </item>
    
  </channel>
</rss>
